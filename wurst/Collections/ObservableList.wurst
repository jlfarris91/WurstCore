package ObservableList
import LinkedList
import Events

/**
 * A double-linked list that can be observed for add/remove/clear operations.
*/
public class ObservableList<T>

  private LinkedList<T> _items

  Event2<ObservableList<T>, T> itemAdded
  Event2<ObservableList<T>, T> itemRemoved
  Event1<ObservableList<T>> collectionCleared

  construct()
    _items = new LinkedList<T>()

  ondestroy
    destroy _items
    destroy itemAdded
    destroy itemRemoved
    destroy collectionCleared

  function add(T elem)
    _items.add(elem)
    itemAdded.call(this, elem)

  function remove(T elem)
    _items.remove(elem)
    itemRemoved.call(this, elem)

  function clear()
    _items.clear()
    collectionCleared.call(this)
