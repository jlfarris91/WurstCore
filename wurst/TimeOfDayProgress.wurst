package TimeOfDayProgress
import Time
import RealtimeUpdate
import Math
import Runnable

public TimeOfDayProgress g_dayProgress
public TimeOfDayProgress g_nightProgress

// ============================================================================
public class TimeOfDayProgress extends Runnable implements IRealtimeListener
  private time m_timeOfDayOnStart
  private timespan m_duration
  private time m_startTime

  // --------------------------------------------------------------------------
  ondestroy
    this.unregisterForRealtimeUpdate()

  // --------------------------------------------------------------------------
  function getDuration() returns timespan
    return m_duration

  // --------------------------------------------------------------------------
  function setDuration(timespan duration)
    m_duration = duration

  // --------------------------------------------------------------------------
  function getStartTime() returns time
    return m_timeOfDayOnStart

  // --------------------------------------------------------------------------
  function setStartTime(time timeOfDayOnStart)
    m_timeOfDayOnStart = timeOfDayOnStart

  // --------------------------------------------------------------------------
  function getElapsed() returns timespan
    return getGameTime() - m_startTime

  // --------------------------------------------------------------------------
  override function onStarted()
    super.onStarted()

    m_startTime = m_timeOfDayOnStart
    m_startTime = makeTime(getDay(), m_startTime.getHour(), m_startTime.getMinute())

    raiseProgressChangedEvent()
    this.registerForRealtimeUpdate(RealtimeUpdatePriority.Slow)

  // --------------------------------------------------------------------------
  override function onCompleted()
    super.onCompleted()

    raiseProgressChangedEvent()
    this.unregisterForRealtimeUpdate()

  // --------------------------------------------------------------------------
  override function getProgress() returns real
    return clamp01(getElapsed() / m_duration)

  // --------------------------------------------------------------------------
  override function realtimeUpdate(real dt)
    raiseProgressChangedEvent()
    if (getProgress() == 1.0)
      complete()

// ============================================================================
function onDayStart()
  g_nightProgress.complete()
  g_dayProgress.start()

// ============================================================================
function onNightStart()
  g_dayProgress.complete()
  g_nightProgress.start()

// ============================================================================
init
  g_dayProgress = new TimeOfDayProgress()
    ..setStartTime(DAY_TIME)
    ..setDuration(DAY_LENGTH)

  g_nightProgress = new TimeOfDayProgress()
    ..setStartTime(NIGHT_TIME)
    ..setDuration(NIGHT_LENGTH)

  registerDayEvent(function onDayStart)
  registerNightEvent(function onNightStart)