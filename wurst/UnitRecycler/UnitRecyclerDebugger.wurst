package UnitRecyclerDebugger
import Frame
import UnitRecycler
import ObjectIds
import DebuggerDialog

// ============================================================================
public class UnitRecyclerDebugger extends DebuggerRealtimeUpdateFrame

  // --------------------------------------------------------------------------
  construct()
    super(createFrame("TEXTAREA", "RecyclerDebugger", GAME_UI, "", 0))

  // --------------------------------------------------------------------------
  override function realtimeUpdate(real _)

    let frameHandle = getFrameHandle()

    BlzFrameSetText(frameHandle, "")

    for unitId in g_unitIdToUnitRecyclerMap
      let recycler = g_unitIdToUnitRecyclerMap.get(unitId)
      if (recycler != null)
        frameHandle.setOrAddText("{0} ({1}) : {2} active {3} inactive".format(recycler.getName(), unitId.toRawCode(), recycler.getActiveCount().toString(), recycler.getStockedCount().toString()))