package Range
import Math
import RefObject

// ============================================================================
public tuple rangeReal(real min, real max)
public tuple rangeInt(int min, int max)

// ============================================================================
public constant rangeInt INT_RANGE_ZERO = rangeInt(0, 0)
public constant rangeReal REAL_RANGE_ZERO = rangeReal(0.0, 0.0)
public constant rangeInt RANGE_ONE_TO_TEN = rangeInt(1, 10)

// ============================================================================
public function rangeInt(int val) returns rangeInt
  return rangeInt(val, val)

// ============================================================================
public function rangeReal(real val) returns rangeReal
  return rangeReal(val, val)

// ============================================================================
public function rangeReal.getRandom() returns real
  return GetRandomReal(this.min, this.max)

// ============================================================================
public function rangeInt.getRandom() returns int
  return GetRandomInt(this.min, this.max)

// ============================================================================
public function rangeInt.getCount() returns int
  return this.max - this.min

// ============================================================================
public function rangeReal.getLength() returns real
  return RAbsBJ(this.max - this.min)

// ============================================================================
public function rangeInt.getLength() returns int
  return IAbsBJ(this.max - this.min)

// ============================================================================
public function rangeReal.getMid() returns real
  return (this.min + this.max) / 2.0

// ============================================================================
public function rangeInt.getMid() returns int
  return R2I(I2R(this.min + this.max) / 2.0)

// ============================================================================
public function int.toRange() returns rangeInt
  return rangeInt(this, this)

// ============================================================================
public function real.toRange() returns rangeReal
  return rangeReal(this, this)

// ============================================================================
public function real.inRange(rangeReal range) returns bool
  return this.isBetween(range.min, range.max)

// ============================================================================
public function int.inRange(rangeInt range) returns bool
  return this.isBetween(range.min, range.max)

// ============================================================================
public function rangeReal.grow(real value) returns rangeReal
  return rangeReal(this.min - value, this.max + value)

// ============================================================================
public function rangeInt.grow(int value) returns rangeInt
  return rangeInt(this.min - value, this.max + value)

// ============================================================================
public function rangeReal.scale(real scale01) returns rangeReal
  let center = this.getMid()
  let lengthScaled = this.getLength() * scale01
  return rangeReal(center - lengthScaled, center + lengthScaled)

// ============================================================================
public function rangeInt.scale(real scale01) returns rangeInt
  let center = this.getMid()
  let lengthScaled = (this.getLength() * scale01).floor()
  return rangeInt(center - lengthScaled, center + lengthScaled)

// ============================================================================
public function rangeReal.toString() returns string
  return "{0}-{1}".format(this.min.toString(), this.max.toString())

// ============================================================================
public function rangeInt.toString() returns string
  return "{0}-{1}".format(this.min.toString(), this.max.toString())

// ============================================================================
public function rangeReal.floor() returns rangeInt
  return rangeInt(this.min.floor(), this.max.floor())

// ============================================================================
public function rangeInt.toReal() returns rangeReal
  return rangeReal(this.min.toReal(), this.max.toReal())

// ============================================================================
public function rangeReal.parameterize(real value) returns real
  return parameterize(this.min, this.max, value)

// ============================================================================
public function rangeReal.parameterize01(real value) returns real
  return parameterize01(this.min, this.max, value)

// ============================================================================
public function rangeInt.parameterize(int value) returns real
  return parameterize(this.min, this.max, value)

// ============================================================================
public function rangeInt.parameterize01(int value) returns real
  return parameterize01(this.min, this.max, value)

// ============================================================================
public function rangeReal.op_mult(real factor) returns rangeReal
  return rangeReal(this.min * factor, this.max * factor)

// ============================================================================
public function rangeInt.op_mult(real factor) returns rangeInt
  return rangeInt((this.min * factor).floor(), (this.max * factor).floor())

// ============================================================================
public function rangeReal.op_divReal(real factor) returns rangeReal
  return rangeReal(this.min / factor, this.max / factor)

// ============================================================================
public function rangeInt.op_divReal(real factor) returns rangeInt
  return rangeInt((this.min / factor).floor(), (this.max / factor).floor())

// ============================================================================
public function rangeInt.op_plus(int value) returns rangeInt
  return rangeInt(this.min + value, this.max + value)

// ============================================================================
public function rangeInt.op_minus(int value) returns rangeInt
  return rangeInt(this.min - value, this.max - value)

// ============================================================================
public function rangeReal.lerp(real t) returns real
  return lerp(this.min, this.max, t)

// ============================================================================
public function rangeInt.lerp(real t) returns real
  return lerp(this.min.toReal(), this.max.toReal(), t)

// ============================================================================
public function lerp(rangeReal start, rangeReal _end, real t) returns rangeReal
  return rangeReal(lerp(start.min, _end.min, t), lerp(start.max, _end.max, t))  

// ============================================================================
public function lerp(rangeInt start, rangeInt _end, real t) returns rangeInt
  return rangeInt(lerpInt(start.min, _end.min, t), lerpInt(start.max, _end.max, t))

// ============================================================================
public function rangeReal.toApproxDPSString() returns string
  return "{0} - {1} dps".format(I2S(R2I(this.min)), I2S(R2I(this.max)))

// ============================================================================
public function rangeReal.getDamageRangeString() returns string
  return "{0} - {1}".format(I2S(R2I(this.min)), I2S(R2I(this.max)))

// ============================================================================
public function rangeInt.getApproxDPSString() returns string
  return "{0} - {1} dps".format(I2S(this.min), I2S(this.max))

// ============================================================================
public function rangeInt.toDamageRangeString() returns string
  return "{0} - {1}".format(I2S(this.min), I2S(this.max))

// ============================================================================
public function rangeInt.has(int value) returns bool
  return value >= this.min and value <= this.max

// ============================================================================
public interface RangeRealFunc
  use RefObject
  function call() returns rangeReal

// ============================================================================
public interface RangeRealFunc1<T>
  use RefObject
  function call(T arg1) returns rangeReal

// ============================================================================
public interface RangeRealAction
  use RefObject
  function call(rangeReal arg)

// ============================================================================
public interface RangeIntFunc
  use RefObject
  function call() returns rangeInt

// ============================================================================
public interface RangeIntFunc1<T>
  use RefObject
  function call(T arg1) returns rangeInt

// ============================================================================
public interface RangeIntAction
  use RefObject
  function call(rangeInt arg)