package Component
import IComponent
import IComposite

// ============================================================================
public abstract class Component implements IComponent
  protected IComposite _owner
  private bool _enabled

  // --------------------------------------------------------------------------
  construct(IComposite owner)
    _owner = owner

  // --------------------------------------------------------------------------
  override function getOwner() returns IComposite
    return _owner

  // --------------------------------------------------------------------------
  override function setEnabled(bool enabled)
    if (_enabled != enabled)
      if (enabled)
        onEnabled()
      else
        onDisabled()
      _enabled = enabled

  // --------------------------------------------------------------------------
  override function getEnabled() returns bool
    return _enabled

  // --------------------------------------------------------------------------
  function enable()
    setEnabled(true)

  // --------------------------------------------------------------------------
  function disable()
    setEnabled(false)

  // --------------------------------------------------------------------------
  function initialize()
    skip

  // --------------------------------------------------------------------------
  protected function onEnabled()
    skip

  // --------------------------------------------------------------------------
  protected function onDisabled()
    skip