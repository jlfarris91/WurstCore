package Loaded
import RegisterEvents
import HashMap
import Orders

HashMap<unit, unit> g_loadedUnits = new HashMap<unit, unit>()
trigger g_unitUnloadedTrigger = CreateTrigger()
unit g_unloadedUnit

// ============================================================================
/** Register a callback for the event of a unit being unloaded.
    Use getUnloadedUnit() to get the unloaded unit.
    Note: isUnitLoaded() will return true for the unloaded unit.
*/
public function registerUnitUnloadedEvent(code callback)
  g_unitUnloadedTrigger.addCondition(Condition(callback))

// ============================================================================
/** Gets the unit being unloaded for the unit unloaded event */
public function getUnloadedUnit() returns unit
  return g_unloadedUnit

// ============================================================================
/** Gets a value indicating whether the given unit is being held by another */
public function isUnitLoaded(unit _unit) returns bool
  return g_loadedUnits.has(_unit)

// ============================================================================
/** Gets the unit that is holding the loaded unit */
public function getTransportUnit(unit loadedUnit) returns unit
  return g_loadedUnits.get(loadedUnit)

// ============================================================================
function raiseUnitUnloadedEvent(unit _unit)
  Log.debug("Unit " + _unit.getName() + " unloaded from unit " + getTransportUnit(_unit).getName())
  g_unloadedUnit = _unit
  g_unitUnloadedTrigger.evaluate()
  g_unloadedUnit = null

// ============================================================================
function onUnitLoaded()
  let loadedUnit = GetLoadedUnit()
  let loadingUnit = GetTransportUnit()
  g_loadedUnits.put(loadedUnit, loadingUnit)
  Log.debug("Unit " + loadedUnit.getName() + " loaded into unit " + loadingUnit.getName())

// ============================================================================
function onUnitIssuedOrder()
  let orderedUnit = GetOrderedUnit()
  if (GetIssuedOrderId() == OrderIds.stop and g_loadedUnits.has(orderedUnit))
    raiseUnitUnloadedEvent(orderedUnit)
    g_loadedUnits.remove(orderedUnit)

// ============================================================================
init
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_LOADED, function onUnitLoaded)
  registerPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_ORDER, function onUnitIssuedOrder)