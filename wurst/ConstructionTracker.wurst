package ConstructionTracker
import HashList
import RegisterEvents
import UnitIndexer
import UnitExtensions

@configurable public constant bool enableConstructionTracker = false 
HashList<unit> g_constructingStructures = new HashList<unit>()

// ============================================================================
public function unit.isBeingConstructed() returns bool
  return enableConstructionTracker and this.isStructure() and g_constructingStructures.has(this)

// ============================================================================
public function unit.isFinishedConstructing() returns bool
  return enableConstructionTracker and this.isStructure() and not g_constructingStructures.has(this)

// ============================================================================
function registerConstructingUnit(unit _unit)
  g_constructingStructures.add(_unit)

// ============================================================================
function unregisterConstructingUnit(unit _unit)
  g_constructingStructures.remove(_unit)

// ============================================================================
function onConstructionStart()
  registerConstructingUnit(GetConstructingStructure())
  
// ============================================================================
function onConstructionCanceled()
  unregisterConstructingUnit(GetConstructingStructure())
  
// ============================================================================
function onConstructionFinished()
  unregisterConstructingUnit(GetConstructedStructure())
  
// ============================================================================
function onUnitDeath()
  unregisterConstructingUnit(GetDyingUnit())

// ============================================================================
init

  if (not enableConstructionTracker)
  //{
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_CONSTRUCT_START, function onConstructionStart)
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL, function onConstructionCanceled)
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_CONSTRUCT_FINISH, function onConstructionFinished)
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_DEATH, function onUnitDeath)
    
    onUnitIndex() () ->
      let indexingUnit = getIndexingUnit()
      if (indexingUnit.isStructure() and indexingUnit.isAlive())
        registerConstructingUnit(indexingUnit)
    
    onUnitDeindex() () ->
      let indexingUnit = getIndexingUnit()
      if (indexingUnit.isStructure())
        unregisterConstructingUnit(indexingUnit)
  //}