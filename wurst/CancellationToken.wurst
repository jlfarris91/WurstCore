package CancellationToken
import RefObject
import Events

// ============================================================================
public class CancellationToken
  private bool m_canceled = false
  private Event m_canceledEvent = null

  use RefObject

  // --------------------------------------------------------------------------
  ondestroy
    if (m_canceledEvent != null)
      destroy m_canceledEvent

  // --------------------------------------------------------------------------
  function isCanceled() returns bool
    return m_canceled

  // --------------------------------------------------------------------------
  function cancel()
    if (not m_canceled)
      m_canceled = true
      if (m_canceledEvent != null)
        m_canceledEvent.call()

  // --------------------------------------------------------------------------
  function cancelAndRelease()
    cancel()
    release()

  // --------------------------------------------------------------------------
  function registerCanceledCallback(EventCallback callback) returns _handle
    
    if (isCanceled())
      callback.call()
      callback.release()
      return INVALID_HANDLE

    if (m_canceledEvent == null)
      m_canceledEvent = new Event()
    return m_canceledEvent.register(callback)

  // --------------------------------------------------------------------------
  function unregisterCanceledCallback(_handle callbackHandle)
    if (m_canceledEvent != null)
      m_canceledEvent.unregister(callbackHandle)