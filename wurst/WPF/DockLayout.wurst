package DockLayout
import HashMap
import initlater Frame

// ============================================================================
public enum Dock
  FILL
  LEFT
  RIGHT
  BOTTOM
  TOP

HashMap<Frame, Dock> m_frameToDockLookup = new HashMap<Frame, Dock>()

// ============================================================================
public class DockLayout
  private rectr m_area
  private rectr m_remaining

  // --------------------------------------------------------------------------
  function getRemaining() returns rectr
    return m_remaining

  // --------------------------------------------------------------------------
  function reset(rectr area)
    m_area = area
    m_remaining = area

  // --------------------------------------------------------------------------
  function arrangeFrame(Frame frame) returns rectr

    let dock = frame.getDock()

    var area = m_remaining
    let frameSize = frame.getSize()

    switch (dock)
      case Dock.LEFT
        area = area.setRight(area.left() + frameSize.x)
        m_remaining = m_remaining.setLeft(m_remaining.left() + frameSize.x)
      case Dock.RIGHT
        area = area.setLeft(area.right() - frameSize.x)
        m_remaining = m_remaining.setRight(m_remaining.right() - frameSize.x)
      case Dock.BOTTOM
        area = area.setTop(area.bottom() + frameSize.y)
        m_remaining = m_remaining.setBottom(m_remaining.bottom() + frameSize.y)
      case Dock.TOP
        area = area.setBottom(area.top() - frameSize.y)
        m_remaining = m_remaining.setTop(m_remaining.top() - frameSize.y)
      case Dock.FILL
        skip
    
    return area

// ============================================================================
public function Frame.setDock(Dock dock)
  m_frameToDockLookup.put(this, dock)

// ============================================================================
public function Frame.getDock() returns Dock
  if (m_frameToDockLookup.has(this))
    return m_frameToDockLookup.get(this)
  return Dock.FILL